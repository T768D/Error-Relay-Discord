"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.default=class{channel;constructor(e){this.channel=e}async sendError(e,n){if(!e)return["failed","undefinedParam"];let t="formatting";try{let r="";const o=String(e instanceof Error?e.stack:e).replace(/\(file:\/\/\/.*\/|C:\\.*\\/g,"  workspace\\").replace(/\( \(|<anonymous>/g,"").split("\n");for(const e of o)/node_modules|node:internal/.test(e)||(r+=e+"\n");if(t="logging",console.error(e),await this.channel.send(r),!n)return"logged";if(t="replying","isChatInputCommand"in n)if(n.replied||n.deferred){const e=await n.fetchReply();await n.editReply({content:`## Something went wrong, the error has been logged. **The response below may be bugged or inaccurate** \n\n${e.content}`,components:[]})}else n.isRepliable()&&await n.reply({content:"Something went wrong, the error has been logged",flags:"Ephemeral",components:[]});else await n.reply("Something went wrong, the error has been logged");return"sucess"}catch{return["failed",t]}}};