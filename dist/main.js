"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ErrorHandler=void 0;class e{logChannel;constructor(e){this.logChannel=e}get channel(){return this.logChannel}set channel(e){"send"in e&&"function"==typeof e.send?this.logChannel=e:console.error("Cannot change channel to a invalid variable! Variable attempted to be changed to:\n",e)}async sendError(e,n,r,t){if(!e)return["failed","undefinedError"];let o="formatting";try{let l="";const a=String(e instanceof Error?e.stack:e).replace(/\(file:\/\/\/.*\/|C:\\.*\\/g,"  workspace\\").replace(/\( \(|<anonymous>/g,"").split("\n");for(const e of a)/node_modules|node:internal/.test(e)||(l+=e+"\n");o="logging",console.error(e);const i=await this.logChannel.send(r?`${r}\n`:""+l);if(!n)return["logged",i];if(o="replying","isChatInputCommand"in n){let e;if(n.replied||n.deferred){const r=await n.fetchReply();e=await n.editReply({content:`${t||"## Something went wrong, the error has been logged."} **The response below may be bugged or inaccurate** \n_ _\n${r.content}`,components:[]})}else{if(!n.isRepliable())return["failed",o];e=await n.reply({content:t||"Something went wrong, the error has been logged",flags:"Ephemeral",components:[]})}return["loggedReplied",i,e]}return["loggedReplied",i,await n.reply("Something went wrong, the error has been logged")]}catch{return["failed",o]}}}exports.ErrorHandler=e,module.exports=e;